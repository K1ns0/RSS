{
  "sources": [
    {
      "title": "离别歌",
      "feedUrl": "https://www.leavesongs.com/feed/",
      "siteUrl": "https://www.leavesongs.com",
      "articles": [
        {
          "id": "https://www.leavesongs.com/PENETRATION/defcon-29-threefactooorx-writeup.html",
          "author": "phithon",
          "description": "defcon 29就这一道Web题目，说实话也没学到啥东西，唯一学到的就是勿钻牛角尖，及时调整策略。此题严格",
          "link": "https://www.leavesongs.com/PENETRATION/defcon-29-threefactooorx-writeup.html",
          "publishedOn": "2021-09-08T07:11:29.253Z",
          "wordCount": 672,
          "title": "JavaScript逆向调试记 —— defcon threefactooorx writeup"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/diy-commons-collections6-poc.html",
          "author": "phithon",
          "description": "这是代码审计知识星球中《Java安全漫谈》的第十二篇文章。",
          "link": "https://www.leavesongs.com/PENETRATION/diy-commons-collections6-poc.html",
          "publishedOn": "2021-09-08T07:11:27.106Z",
          "wordCount": 559,
          "title": "手工编写简化版CommonsCollections6，带你实现Java8全版本反序列化利用"
        },
        {
          "id": "https://www.leavesongs.com/PHP/baota-phpmyadmin-unauthentication-analysis.html",
          "author": "phithon",
          "description": "本文2020年8月24日发表于代码审计公众号\n周日晚，某群里突然发布了一则消息，宝塔面板的phpmyadmin存在未授权访问漏洞的紧急漏洞预警，并给出了一大批存在漏洞的URL：\n\n随便点开其中一个，赫然就是一个大大的phpmyadmin后台管理页面，无需任何认证与登录。当然，随后各种神图神事也都刷爆了社交网络，作为一个冷静安全研究者，我对此当然是一笑置之，但是这个漏洞的原因我还是颇感兴趣的，所",
          "link": "https://www.leavesongs.com/PHP/baota-phpmyadmin-unauthentication-analysis.html",
          "publishedOn": "2021-09-08T07:11:10.944Z",
          "wordCount": 332,
          "title": "宝塔面板phpMyAdmin未授权访问漏洞是个低级错误吗？"
        },
        {
          "id": "https://www.leavesongs.com/PYTHON/django-timezone-detail.html",
          "author": "phithon",
          "description": "在开发国际化网站的时候，难免会与时区打交道，通用CMS更是如此，毕竟其潜在用户可能是来自于全球各地的。Django在时区这个问题上下了不少功夫，但是很多资深的开发者都有可能尚未完全屡清楚Django中各种时间的实际意义和使用方法，导致写出错误的代码；作为安全研究人员，时区问题也可能和一些安全问题挂钩，比如优惠券的过期时间、订单的下单与取消时间等，如果没有考虑时区问题，有可能将导致一些逻辑漏洞。\n本",
          "link": "https://www.leavesongs.com/PYTHON/django-timezone-detail.html",
          "publishedOn": "2021-09-08T07:11:10.877Z",
          "wordCount": 280,
          "title": "Django中与时区相关的安全问题"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/where-is-bcel-classloader.html",
          "author": "phithon",
          "description": "com.sun.org.apache.bcel.internal.util.ClassLoader是常常在构造漏洞利用POC时用到的类。但是，我前几天在写《Java安全漫谈》的时候，偶然发现我环境中的com.sun.org.apache.bcel.internal.util.ClassLoader类找不到了，本文就带大家来找找BCEL ClassLoader。\n0x01 BCEL从哪里来\n首先，B",
          "link": "https://www.leavesongs.com/PENETRATION/where-is-bcel-classloader.html",
          "publishedOn": "2021-09-08T07:11:10.662Z",
          "wordCount": 399,
          "title": "BCEL ClassLoader去哪了"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/the-collision-of-containers-and-the-cloud-pentesting-a-MinIO.html",
          "author": "phithon",
          "description": "事先声明：本次测试过程完全处于本地或授权环境，仅供学习与参考，不存在未授权测试过程。本文提到的漏洞《MinIO未授权SSRF漏洞（CVE-2021-21287）》已经修复，也请读者勿使用该漏洞进行未授权测试，否则作者不承担任何责任\n(English edition)\n随着工作和生活中的一些环境逐渐往云端迁移，对象存储的需求也逐渐多了起来，MinIO就是一款支持部署在私有云的开源对象存储系统。M",
          "link": "https://www.leavesongs.com/PENETRATION/the-collision-of-containers-and-the-cloud-pentesting-a-MinIO.html",
          "publishedOn": "2021-09-08T07:11:10.646Z",
          "wordCount": 632,
          "title": "CVE-2021-21287: 容器与云的碰撞——一次对MinIO的测试"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/a-tour-of-tui-editor-xss.html",
          "author": "phithon",
          "description": "TOAST Tui Editor是一款富文本Markdown编辑器，用于给HTML表单提供Markdown和富文本编写支持。最近我们在工作中需要使用到它，相比于其他一些Markdown编辑器，它更新迭代较快，功能也比较强大。另外，它不但提供编辑器功能，也提供了渲染功能（Viewer），也就是说编辑和显示都可以使用Tui Editor搞定。\nTui Editor的Viewer功能使用方法很简单：\ni",
          "link": "https://www.leavesongs.com/PENETRATION/a-tour-of-tui-editor-xss.html",
          "publishedOn": "2021-09-08T07:11:10.437Z",
          "wordCount": 520,
          "title": "一次对 Tui Editor XSS 的挖掘与分析"
        },
        {
          "id": "https://www.leavesongs.com/PHP/php-8-0-release.html",
          "author": "phithon",
          "description": "本文首发在我的『代码审计』公众号，欢迎关注\n经历了近半年的alpha版本测试后，PHP在2020年11月26号正式发布了8.0版本：https://www.php.net/releases/8.0/en.php\n今天我们就来浏览一下PHP 8.0中出现的主要特性，以及它给我们安全研究人员带来的挑战。\n命名参数 Named Arguments\nPHP 8 以前，如果我们需要给一个函数的第N个参数",
          "link": "https://www.leavesongs.com/PHP/php-8-0-release.html",
          "publishedOn": "2021-09-08T07:11:10.408Z",
          "wordCount": 476,
          "title": "有安全研究者混入了PHP 8.0开发组！"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/cachet-from-laravel-sqli-to-bug-bounty.html",
          "author": "phithon",
          "description": "事先声明：本次测试过程完全处于本地或授权环境，仅供学习与参考，不存在未授权测试过程。本文提到的漏洞《Cachet SQL注入漏洞（CVE-2021-39165）》已经修复，也请读者勿使用该漏洞进行未授权测试，否则作者不承担任何责任\n0x01 故事的起源\n一个百无聊赖的周日晚上，我在知识星球闲逛，发现有一个匿名用户一连向我提出了两个问题：\n\n本来不是很想回答这两个问题，一是感觉比较基础，二是现在",
          "link": "https://www.leavesongs.com/PENETRATION/cachet-from-laravel-sqli-to-bug-bounty.html",
          "publishedOn": "2021-09-08T07:11:10.280Z",
          "wordCount": 1167,
          "title": "CVE-2021-39165: 从一个Laravel SQL注入漏洞开始的Bug Bounty之旅"
        },
        {
          "id": "https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html",
          "author": "phithon",
          "description": "这是代码审计知识星球中Java安全漫谈的第十七篇文章。完整文章列表与相关代码请参考：https://github.com/phith0n/JavaThings\n上一篇文章里，我们认识了java.util.PriorityQueue，它在Java中是一个优先队列，队列中每一个元素有自己的优先级。在反序列化这个对象时，为了保证队列顺序，会进行重排序的操作，而排序就涉及到大小比较，进而执行java.",
          "link": "https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html",
          "publishedOn": "2021-09-08T07:11:10.208Z",
          "wordCount": 737,
          "title": "CommonsBeanutils与无commons-collections的Shiro反序列化利用"
        }
      ]
    },
    {
      "title": "Armin Ronacher's Thoughts and Writings",
      "feedUrl": "https://lucumr.pocoo.org/feed.atom",
      "siteUrl": "http://lucumr.pocoo.org/",
      "articles": []
    },
    {
      "title": "素十八",
      "feedUrl": "https://su18.org/atom.xml",
      "siteUrl": "https://su18.org",
      "articles": [
        {
          "id": "https://su18.org/post/jdbc-connection-url-attack/",
          "author": null,
          "description": "你救赎的人 终将成为你的光",
          "link": "https://su18.org/post/jdbc-connection-url-attack/",
          "publishedOn": "2021-09-01T23:47:39.000Z",
          "wordCount": 3450,
          "title": "JDBC Connection URL Attack"
        }
      ]
    },
    {
      "title": "Coding (In)Security",
      "feedUrl": "http://coding-insecurity.blogspot.com/feeds/posts/default",
      "siteUrl": "http://coding-insecurity.blogspot.com/",
      "articles": []
    },
    {
      "title": "0kami's Blog",
      "feedUrl": "https://blog.0kami.cn/atom.xml",
      "siteUrl": "/atom.xml",
      "articles": []
    },
    {
      "title": "m0d9's blog",
      "feedUrl": "https://m0d9.me/atom.xml",
      "siteUrl": "http://m0d9.me/atom.xml",
      "articles": [
        {
          "id": "http://m0d9.me/2021/08/29/XStream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Tabby%20CVE%E4%B9%8B%E6%97%85/",
          "author": null,
          "description": "<p>月底在即，再不写点东西，每月一篇都要食言了。上个月刚挖的OpenRASP的坑，本打算再研究研究绕过姿势，验证下猜想，也没下文。正好6月份交的XStream SSRF Gadget CVE下来，之前XStream系列草稿箱里也待着之前逆向分析师傅们挖掘的思路&amp;手法，正好编辑编辑，水一篇”如何挖掘XStream Gadgets”。</p>\n<p>首先感谢Wh1t3p1g师傅的Tabby，用起来比gadgetinspector更顺手，找链神器。</p>\n<h2 id=\"Tabby\"><a href=\"#Tabby\" class=\"headerlink\" title=\"Tabby\"></a>Tabby</h2><p>有关Tabby的介绍，详情可以参考【1】中Wh1t3p1g师傅的几个wiki，写的很详细了，这里也不多啰嗦。（这里膜一下Wh1t3p1g师傅）</p>\n<p>Neo4j 查询比较吃cpu，小本本加上idea同时跑吃力，搞台vps跑比较好，但是tabby是通过apoc.load.csv file写Neo4j数据的，相当于限制了本机，因此给下整库的dump和load（当然，直接整个在vps上操作也是ok的）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># dump neo4j database</span></span><br><span class=\"line\">neo4j-admin dump --to /tmp/neo4j.dump --database neo4j</span><br><span class=\"line\"><span class=\"comment\"># scp dump file to vps</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load neo4j dump file</span></span><br><span class=\"line\">./bin/neo4j stop</span><br><span class=\"line\">./bin/neo4j-admin load --from=/root/neo4j.dump --database=neo4j --force</span><br><span class=\"line\">./bin/neo4j start</span><br></pre></td></tr></table></figure>",
          "link": "http://m0d9.me/2021/08/29/XStream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Tabby%20CVE%E4%B9%8B%E6%97%85/",
          "publishedOn": "2021-08-29T09:03:00.000Z",
          "wordCount": 918,
          "title": "XStream反序列化（三）——Tabby CVE之旅"
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}